AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: CodeStar projectId used to associate new resources to team members
  CodeDeployRole:
    Type: String
    Description: IAM role to allow AWS CodeDeploy to manage deployment of AWS Lambda functions
  Stage:
    Type: String
    Description: The name for a project pipeline stage, such as Staging or Prod, for which resources are provisioned and deployed.
    Default: ''

Globals:
  Function:
    AutoPublishAlias: live
    DeploymentPreference:
      Enabled: true
      Type: AllAtOnce
      Role: !Ref CodeDeployRole

Resources:
  SoundprintS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectId}-bucket'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: HistoryLifecycleRule
            Prefix: 'history/'
            Status: Enabled
            ExpirationInDays: 10

  SoundprintLambdaRole:
    Type: AWS::IAM::Role
    Description: Creating IAM role for Lambda functions
    Properties:
      RoleName: !Sub '${ProjectId}-Lambda-Exec-Resources'
      Description: IAM Role held by lambda functions under the Soundprint project
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ lambda.amazonaws.com ]
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        - PolicyName: SoundprintBucketAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: !Sub 'arn:${AWS::Partition}:s3:::${SoundprintS3Bucket}/*'
        - PolicyName: SoundprintDynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: 'arn:aws:dynamodb:us-west-2:212033165103:table/SpotifyTokenState'

  SoundprintSpotifyListener:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectId}-lambda-spotify-listener'
      Runtime: python3.8
      Handler: src.lambda.spotifylistener.lambda_handler
      Role: !GetAtt SoundprintLambdaRole.Arn