AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: CodeStar projectId used to associate new resources to team members
  CodeDeployRole:
    Type: String
    Description: IAM role to allow AWS CodeDeploy to manage deployment of AWS Lambda functions
  Stage:
    Type: String
    Description: The name for a project pipeline stage, such as Staging or Prod, for which resources are provisioned and deployed.
    Default: ''

Globals:
  Function:
    AutoPublishAlias: live
    Runtime: python3.8
    MemorySize: 512
    Timeout: 60
    DeploymentPreference:
      Enabled: true
      Type: AllAtOnce
      Role: !Ref CodeDeployRole

Resources:
  SoundprintS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectId}-bucket'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: HistoryLifecycleRule
            Prefix: 'history/'
            Status: Enabled
            ExpirationInDays: 10

  SoundprintLambdaRole:
    Type: AWS::IAM::Role
    Description: Creating IAM role for Lambda functions
    Properties:
      RoleName: !Sub '${ProjectId}-Lambda-Exec-Resources'
      Description: IAM Role held by lambda functions under the Soundprint project
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ lambda.amazonaws.com ]
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        - PolicyName: SoundprintBucketAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: !Sub 'arn:${AWS::Partition}:s3:::${ProjectId}-bucket/*'
        - PolicyName: SoundprintDynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: 'arn:aws:dynamodb:us-west-2:212033165103:table/SpotifyTokenState'

  SoundprintSpotifyListener:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectId}-lambda-spotify-listener'
      Description: Pulls recently heard Spotify tracks in the last hour, triggered at the start of every hour
      Handler: src.lambda.spotifylistener.lambda_handler
      Events:
        ScheduleHourEvent:
          Type: Schedule
          Properties:
            Schedule: 'cron(0 * * * ? *)'
            RetryPolicy:
              MaximumEventAgeInSeconds: 1800
      Role: !GetAtt SoundprintLambdaRole.Arn

  SoundprintSpotifyTracker:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectId}-lambda-spotify-tracker'
      Description: Compiles track metadata by track-id, triggered upon creation of file with recently played tracks
      Handler: src.lambda.spotifytracker.lambda_handler
      Events:
        S3ListenFileEvent:
          Type: S3
          Properties:
            Bucket: !Ref SoundprintS3Bucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: 'history/listening/'
                  - Name: suffix
                    Value: '.csv'
      Role: !GetAtt SoundprintLambdaRole.Arn

    SoundprintSpotifyAlbumer:
      Type: AWS::Serverless::Function
      Properties:
        FunctionName: !Sub '${ProjectId}-lambda-spotify-albumer'
        Description: Compiles album metadata by album-id upon creation of file with track metadata
        Handler: src.lambda.spotifyalbumer.lambda_handler
        Events:
          S3TrackFileEvent:
            Bucket: !Ref SoundprintS3Bucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: 'history/tracks/'
                  - Name: suffix
                    Value: '.csv'
        Role: !GetAtt SoundprintLambdaRole.Arn

    SoundprintSpotifyArtister:
      Type: AWS::Serverless::Function
      Properties:
        FunctionName: !Sub '${ProjectId}-lambda-spotify-artister'
        Description: Compiles artist metadata by artist-id upon creation of file with track metadata
        Handler: src.lambda.spotifyartister.lambda_handler
        Events:
          S3TrackFileEvent:
            Bucket: !Ref SoundprintS3Bucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: 'history/tracks/'
                  - Name: suffix
                    Value: '.csv'
        Role: !GetAtt SoundprintLambdaRole.Arn
